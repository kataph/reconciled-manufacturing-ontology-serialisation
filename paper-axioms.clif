(cl-comment 'Axioms of the paper Manufacturing Resources, Capabilities, and Engineering Functions: Towards an Ontology-based Integration; for FOIS 2023')

(cl-comment 'Ax1: the domain and range of used-by are concept and description, respectively')
(forall (x y)
	(if (US x y)(and (CN x)(DS y))))

(cl-comment 'Ax2: defined-by entails used-by')
(forall (x y)
	(if (DF x y)(US x y)))

(cl-comment 'Ax3: each description uses some concept')
(forall (x)
	(if (DS x)(exists (y) (US y x))))

(cl-comment 'Ax4: each concept is defined by an unique description')
(forall (x)
  (if (CN x)(exists (y) (and (DF x y)(forall (z)
    (if (DF x z)(= y z)))))))

(cl-comment 'Df1: State descriptions are descriptions that are satisfied by states only')
(forall (x)
	(iff (StateDescr x)(forall (y t) (if (CF y x t)(ST y)))))

(cl-comment 'Df2: Plan x has goal y if x is an activity with state description y as part and there is an agent z having y as goal, and for all occurrences o of x there is a state s satisfying y at the end of o')
(forall (x y)
	(iff (hasGoal x y)(and (Plan x)
    (StateDescr y)
    (CP y x)
    (exists (z)(goalForAgents y z))
    (forall (o)(exists (s)
      (if (occOf o x)(CF s y (EndOf o))))))))

(cl-comment 'Df3: Plan x has capability requirement y if x has requirement y which classifies capabilities only, and each occurrence of x is participated, at some time, by some entity bearing a capability classified by y')
(forall (x y)
	(iff (hasCapabReq x y)(and (hasReq x y)
    (forall (z t)(if (CF z y t)(Capability z)))
    (forall (o)(if (occOf o x)(exists (w z t)
      (and (PC w o t)
      (I z w t)
      (CF z y t))))))))

(cl-comment 'Df4: x is a capability requirement if there exists a plan that has x as capability requirement')
(forall (x)
	(iff (CapabReq x)(exists (y) (hasCapabReq y x))))

(cl-comment 'Df5: x has input requirement y if x has requirement y, which is a technical specification, and for all occurrences o of x, there is an object z satisfying y at the beginning of o')
(forall (x y)
	(iff (hasInputReq x y)(and (hasReq x y)
    (TechSpec y)
    (forall (o)(exists (z)
      (if (occOf o x)(CF z y (StartOf o))))))))

(cl-comment 'Df6: x has intended output y in z means that x has goal z and y is an technical specification that is part of x, and for every occurrence o of x there is an artifact p and a state s that are present at the end of o and satisfy y and z, respectively. Also, p participates in s at the end of o')
(forall (x y z)
	(iff (hasOutputReq x y z)(and (hasGoal x z)
    (TechSpec y)
    (CP y x)                        
    (forall (o)(exists (s p)
      (if (occOf o x)(and (CF p y (EndOf o))
        (CF s z (EndOf o))
        (PC p s (EndOf o)))))))))

(cl-comment 'Df7: A process plan a is a plan that has some input requirement y, some capability requirement v, and some output z at some state w')
(forall (a)
	(iff (PrcPlan a)(exists (y z w v)
    (and (hasInputReq a y)
    (hasCapabReq a v)
    (hasOutputReq a z w)))))                        
    
(cl-comment 'Df8: r is a resource for a at t means that r is a physical endurant, a a process plan with capability requirement x and r bears, at time t, some capability y satisfying x at time t')
(forall (r a t)
	(iff (resourceFor r a t)(and (PED r)
    (PrcPlan a)
    (exists (x y)(and (hasCapabReq a x)
      (CF y x t)
      (I y r t))))))
      
(cl-comment 'Ax5: An actual resource for a process plan at some time is a resource for that plan at that very time')
(forall (x y t)
	(if (actualResFor x y t)(resourceFor x y t)))

(cl-comment 'Ax6: Capabilities are DOLCE physical or abstract qualities')
(forall (x)
	(if (Capability x)(or (PQ x)(AQ x))))

(cl-comment 'Ax7: Plans, technical specification, and capability requirements are descriptions; engineering methods are plans; descriptions are non-agentive social objects; process plans are plans; engineering functions are concepts')
(forall (x)
  (and (if (or (Plan x)(TechSpec x)(CapabReq x))(DS x))
  (if (DS x)(NASO x))
  (if (MethodEng x)(Plan x))
  (if (PrcPlan x)(Plan x))
  (if (FnctEng x)(CN x))))

(cl-comment 'Ax8: Each engineering function is defined by an engineering method')
(forall (x)
	(if (FnctEng x)(exists (y)
    (and (MethodEng y)
    (DF x y)))))

(cl-comment 'Ax9: Each engineering method makes use of some engineering function')
(forall (x)
	(if (MethodEng x)(exists (y)
    (and (FnctEng y)
    (US x y)))))

(cl-comment 'Ax10: Engineering methods have goals')
(forall (x)
	(if (MethodEng x)(exists (y)(hasGoal x y))))
